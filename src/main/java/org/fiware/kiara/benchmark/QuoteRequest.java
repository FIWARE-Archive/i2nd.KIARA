 /* KIARA - Middleware for efficient and QoS/Security-aware invocation of services and exchange of messages
 *
 * Copyright (C) 2014 Proyectos y Sistemas de Mantenimiento S.L. (eProsima)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * @file .java
 * This file contains the class representing a user defined structure.
 *
 * This file was generated by using the tool Kiaragen.
 *
 */
package org.fiware.kiara.benchmark;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.Objects;
import java.util.Set;
import java.util.HashSet;
import java.util.Map;
import java.util.HashMap;
import org.fiware.kiara.serialization.impl.BasicSerializers;
import org.fiware.kiara.serialization.impl.BinaryInputStream;
import org.fiware.kiara.serialization.impl.BinaryOutputStream;

import org.fiware.kiara.serialization.impl.Serializable;
import org.fiware.kiara.serialization.impl.SerializerImpl;
import org.fiware.kiara.serialization.impl.CDRSerializer;
import org.fiware.kiara.serialization.impl.ListAsArraySerializer;
import org.fiware.kiara.serialization.impl.ListAsSequenceSerializer;
import org.fiware.kiara.serialization.impl.Serializer;
import org.fiware.kiara.serialization.impl.MapAsMapSerializer;
import org.fiware.kiara.serialization.impl.SetAsSetSerializer;
import org.fiware.kiara.serialization.impl.ObjectSerializer;
import org.fiware.kiara.serialization.impl.EnumSerializer;

/**
 * Class definition for the user defined type QuoteRequest.
 *
 * @author Kiaragen tool.
 *
 */
public class QuoteRequest implements Serializable {

    /*
     *	Attributes
     */
    private boolean isEcho;
    private int counter;
    private int securityID;
    private double applVersionID;
    private double messageType;
    private double senderCompID;
    private int msgSeqNum;
    private int sendingTime;
    private double quoteReqID;
    private List<RelatedSym> related;

    /*
     *      Attribute Serializers
     */
        private static final org.fiware.kiara.serialization.impl.Serializer<List<RelatedSym>> s_related =
            new ListAsSequenceSerializer<>(new ObjectSerializer<>(RelatedSym.class));
    /*
     *	Default constructor
     */

    public QuoteRequest() {
        this.isEcho = false;
        this.counter = 0;
        this.securityID = 0;
        this.applVersionID = 0.0;
        this.messageType = 0.0;
        this.senderCompID = 0.0;
        this.msgSeqNum = 0;
        this.sendingTime = 0;
        this.quoteReqID = 0.0;
        this.related = new ArrayList<RelatedSym>();
    }

    /*
     * This method serializes a QuoteRequest.
     *
     * @see org.fiware.kiara.serialization.impl.Serializable#serialize(org.fiware.kiara.serialization.impl.SerializerImpl, org.fiware.kiara.serialization.impl.BinaryOutputStream, java.lang.String)
     */
    @Override
    public void serialize(SerializerImpl impl, BinaryOutputStream message, String name) throws IOException {
        impl.serializeBoolean(message, name, this.isEcho);
        impl.serializeUI32(message, name, this.counter);
        impl.serializeUI32(message, name, this.securityID);
        impl.serializeFloat64(message, name, this.applVersionID);
        impl.serializeFloat64(message, name, this.messageType);
        impl.serializeFloat64(message, name, this.senderCompID);
        impl.serializeUI32(message, name, this.msgSeqNum);
        impl.serializeUI32(message, name, this.sendingTime);
        impl.serializeFloat64(message, name, this.quoteReqID);
        s_related.write(impl, message, name, this.related);
    }

    /*
     * This method deserializes a QuoteRequest.
     *
     * @see org.fiware.kiara.serialization.impl.Serializable#deserialize(org.fiware.kiara.serialization.impl.SerializerImpl, org.fiware.kiara.serialization.impl.BinaryInputStream, java.lang.String)
     */
    @Override
    public void deserialize(SerializerImpl impl, BinaryInputStream message, String name) throws IOException {
        this.isEcho = impl.deserializeBoolean(message, name);
        this.counter = impl.deserializeUI32(message, name);
        this.securityID = impl.deserializeUI32(message, name);
        this.applVersionID = impl.deserializeFloat64(message, name);
        this.messageType = impl.deserializeFloat64(message, name);
        this.senderCompID = impl.deserializeFloat64(message, name);
        this.msgSeqNum = impl.deserializeUI32(message, name);
        this.sendingTime = impl.deserializeUI32(message, name);
        this.quoteReqID = impl.deserializeFloat64(message, name);
        this.related = s_related.read(impl, message, name);
    }

    /*
     * @param other An object instance of Object
     */
    @Override
    public boolean equals(Object other) {
        boolean comparison = true;

        if (other instanceof QuoteRequest) {

            comparison = comparison && (this.isEcho == ((QuoteRequest) other).isEcho);

            comparison = comparison && (this.counter == ((QuoteRequest) other).counter);

            comparison = comparison && (this.securityID == ((QuoteRequest) other).securityID);

            comparison = comparison && (this.applVersionID == ((QuoteRequest) other).applVersionID);

            comparison = comparison && (this.messageType == ((QuoteRequest) other).messageType);

            comparison = comparison && (this.senderCompID == ((QuoteRequest) other).senderCompID);

            comparison = comparison && (this.msgSeqNum == ((QuoteRequest) other).msgSeqNum);

            comparison = comparison && (this.sendingTime == ((QuoteRequest) other).sendingTime);

            comparison = comparison && (this.quoteReqID == ((QuoteRequest) other).quoteReqID);

            comparison = comparison && this.related.equals(((QuoteRequest) other).related);

        }

        return comparison;
    }

    /*
     * Method to get the attribute isEcho.
     */
    public boolean getIsEcho() {
        return this.isEcho;
    }

    /*
     * Method to set the attribute isEcho.
     */
    public void setIsEcho(boolean isEcho) {
        this.isEcho = isEcho;
    }

    /*
     * Method to get the attribute counter.
     */
    public int getCounter() {
        return this.counter;
    }

    /*
     * Method to set the attribute counter.
     */
    public void setCounter(int counter) {
        this.counter = counter;
    }

    /*
     * Method to get the attribute securityID.
     */
    public int getSecurityID() {
        return this.securityID;
    }

    /*
     * Method to set the attribute securityID.
     */
    public void setSecurityID(int securityID) {
        this.securityID = securityID;
    }

    /*
     * Method to get the attribute applVersionID.
     */
    public double getApplVersionID() {
        return this.applVersionID;
    }

    /*
     * Method to set the attribute applVersionID.
     */
    public void setApplVersionID(double applVersionID) {
        this.applVersionID = applVersionID;
    }

    /*
     * Method to get the attribute messageType.
     */
    public double getMessageType() {
        return this.messageType;
    }

    /*
     * Method to set the attribute messageType.
     */
    public void setMessageType(double messageType) {
        this.messageType = messageType;
    }

    /*
     * Method to get the attribute senderCompID.
     */
    public double getSenderCompID() {
        return this.senderCompID;
    }

    /*
     * Method to set the attribute senderCompID.
     */
    public void setSenderCompID(double senderCompID) {
        this.senderCompID = senderCompID;
    }

    /*
     * Method to get the attribute msgSeqNum.
     */
    public int getMsgSeqNum() {
        return this.msgSeqNum;
    }

    /*
     * Method to set the attribute msgSeqNum.
     */
    public void setMsgSeqNum(int msgSeqNum) {
        this.msgSeqNum = msgSeqNum;
    }

    /*
     * Method to get the attribute sendingTime.
     */
    public int getSendingTime() {
        return this.sendingTime;
    }

    /*
     * Method to set the attribute sendingTime.
     */
    public void setSendingTime(int sendingTime) {
        this.sendingTime = sendingTime;
    }

    /*
     * Method to get the attribute quoteReqID.
     */
    public double getQuoteReqID() {
        return this.quoteReqID;
    }

    /*
     * Method to set the attribute quoteReqID.
     */
    public void setQuoteReqID(double quoteReqID) {
        this.quoteReqID = quoteReqID;
    }

    /*
     * Method to get the attribute related.
     */
    public List<RelatedSym> getRelated() {
        return this.related;
    }

    /*
     * Method to set the attribute related.
     */
    public void setRelated(List<RelatedSym> related) {
        this.related = related;
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.isEcho, this.counter, this.securityID, this.applVersionID, this.messageType, this.senderCompID, this.msgSeqNum, this.sendingTime, this.quoteReqID, this.related);
    }
}
