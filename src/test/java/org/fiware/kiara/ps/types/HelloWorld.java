package org.fiware.kiara.ps.types;
 /* KIARA - Middleware for efficient and QoS/Security-aware invocation of services and exchange of messages
 *
 * Copyright (C) 2014 Proyectos y Sistemas de Mantenimiento S.L. (eProsima)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * @file .java
 * This file contains the class representing a user defined structure.
 *
 * This file was generated by using the tool Kiaragen.
 *
 */


import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.Objects;
import java.util.Set;
import java.util.HashSet;
import java.util.Map;
import java.util.HashMap;

import org.fiware.kiara.serialization.impl.BinaryInputStream;
import org.fiware.kiara.serialization.impl.BinaryOutputStream;
import org.fiware.kiara.serialization.impl.Serializable;
import org.fiware.kiara.serialization.impl.SerializerImpl;

/**
 * Class definition for the user defined type InnerStruct.
 *
 * @author Kiaragen tool.
 *
 */
public class HelloWorld implements Serializable {

    /*
     *	Attributes
     */
    private int innerLongAtt;
    private java.lang.String innerStringAtt;

    /*
         *      Attribute Serializers
         */


	/*
     *	Default constructor
     */
    public HelloWorld() {
        this.innerLongAtt = 0;
        this.innerStringAtt = "";
    }

    /*
     * This method serializes a InnerStruct.
     *
	 * @see org.fiware.kiara.serialization.impl.Serializable#serialize(org.fiware.kiara.serialization.impl.SerializerImpl, org.fiware.kiara.serialization.impl.BinaryOutputStream, java.lang.String)
     */
    @Override
    public void serialize(SerializerImpl impl, BinaryOutputStream message, String name) throws IOException {
        impl.serializeI32(message, name, this.innerLongAtt);
        impl.serializeString(message, name, this.innerStringAtt);
    }

    /*
     * This method deserializes a InnerStruct.
     *
	 * @see org.fiware.kiara.serialization.impl.Serializable#deserialize(org.fiware.kiara.serialization.impl.SerializerImpl, org.fiware.kiara.serialization.impl.BinaryInputStream, java.lang.String)
     */
    @Override
    public void deserialize(SerializerImpl impl, BinaryInputStream message, String name) throws IOException {
        this.innerLongAtt = impl.deserializeI32(message, name);
        this.innerStringAtt = impl.deserializeString(message, name);
    }

    /*
     * @param other An object instance of Object
     */
    @Override
    public boolean equals(Object other) {
        boolean comparison = true;

        if (other instanceof HelloWorld) {

            comparison = comparison && (this.innerLongAtt == ((HelloWorld) other).innerLongAtt);

            comparison = comparison && (this.innerStringAtt.compareTo(((HelloWorld) other).innerStringAtt) == 0);

        }

        return comparison;
    }

    /*
     * Method to get the attribute innerLongAtt.
     */
    public int getInnerLongAtt() {
        return this.innerLongAtt;
    }

    /*
     * Method to set the attribute innerLongAtt.
     */
    public void setInnerLongAtt(int innerLongAtt) {
        this.innerLongAtt = innerLongAtt;
    }

    /*
     * Method to get the attribute innerStringAtt.
     */
    public java.lang.String getInnerStringAtt() {
        return this.innerStringAtt;
    }

    /*
     * Method to set the attribute innerStringAtt.
     */
    public void setInnerStringAtt(java.lang.String innerStringAtt) {
        this.innerStringAtt = innerStringAtt;
	}

	@Override
	public int hashCode() {
		return Objects.hash(this.innerLongAtt, this.innerStringAtt);
    }

    public static int getMaxSize() {
        return 4 + 4 + 255;
    }
    
    public void copy(HelloWorld other) {
        this.innerLongAtt = other.innerLongAtt;
        this.innerStringAtt = other.innerStringAtt;
    }

	
}
