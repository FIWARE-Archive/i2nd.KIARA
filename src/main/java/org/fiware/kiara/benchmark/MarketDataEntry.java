 /* KIARA - Middleware for efficient and QoS/Security-aware invocation of services and exchange of messages
 *
 * Copyright (C) 2014 Proyectos y Sistemas de Mantenimiento S.L. (eProsima)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * @file .java
 * This file contains the class representing a user defined structure.
 *
 * This file was generated by using the tool Kiaragen.
 *
 */
package org.fiware.kiara.benchmark;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.Objects;
import java.util.Set;
import java.util.HashSet;
import java.util.Map;
import java.util.HashMap;
import org.fiware.kiara.serialization.impl.BasicSerializers;
import org.fiware.kiara.serialization.impl.BinaryInputStream;
import org.fiware.kiara.serialization.impl.BinaryOutputStream;

import org.fiware.kiara.serialization.impl.Serializable;
import org.fiware.kiara.serialization.impl.SerializerImpl;
import org.fiware.kiara.serialization.impl.CDRSerializer;
import org.fiware.kiara.serialization.impl.ListAsArraySerializer;
import org.fiware.kiara.serialization.impl.ListAsSequenceSerializer;
import org.fiware.kiara.serialization.impl.Serializer;
import org.fiware.kiara.serialization.impl.MapAsMapSerializer;
import org.fiware.kiara.serialization.impl.SetAsSetSerializer;
import org.fiware.kiara.serialization.impl.ObjectSerializer;
import org.fiware.kiara.serialization.impl.EnumSerializer;

/**
 * Class definition for the user defined type MarketDataEntry.
 *
 * @author Kiaragen tool.
 *
 */
public class MarketDataEntry implements Serializable {

    /*
     *	Attributes
     */
    private int mdUpdateAction;
    private int mdPriceLevel;
    private double mdEntryType;
    private int openCloseSettleFlag;
    private int securityIDSource;
    private int securityID;
    private int rptSeq;
    private double mdEntryPx;
    private int mdEntryTime;
    private int mdEntrySize;
    private int numberOfOrders;
    private double tradingSessionID;
    private double netChgPrevDay;
    private int tradeVolume;
    private double tradeCondition;
    private double tickDirection;
    private double quoteCondition;
    private int aggressorSide;
    private double matchEventIndicator;
    private double dummy1;
    private int dummy2;

    /*
     *      Attribute Serializers
     */
    /*
     *	Default constructor
     */
    public MarketDataEntry() {
        this.mdUpdateAction = 0;
        this.mdPriceLevel = 0;
        this.mdEntryType = 0.0;
        this.openCloseSettleFlag = 0;
        this.securityIDSource = 0;
        this.securityID = 0;
        this.rptSeq = 0;
        this.mdEntryPx = 0.0;
        this.mdEntryTime = 0;
        this.mdEntrySize = 0;
        this.numberOfOrders = 0;
        this.tradingSessionID = 0.0;
        this.netChgPrevDay = 0.0;
        this.tradeVolume = 0;
        this.tradeCondition = 0.0;
        this.tickDirection = 0.0;
        this.quoteCondition = 0.0;
        this.aggressorSide = 0;
        this.matchEventIndicator = 0.0;
        this.dummy1 = 0.0;
        this.dummy2 = 0;
    }

    /*
     * This method serializes a MarketDataEntry.
     *
     * @see org.fiware.kiara.serialization.impl.Serializable#serialize(org.fiware.kiara.serialization.impl.SerializerImpl, org.fiware.kiara.serialization.impl.BinaryOutputStream, java.lang.String)
     */
    @Override
    public void serialize(SerializerImpl impl, BinaryOutputStream message, String name) throws IOException {
        impl.serializeUI32(message, name, this.mdUpdateAction);
        impl.serializeUI32(message, name, this.mdPriceLevel);
        impl.serializeFloat64(message, name, this.mdEntryType);
        impl.serializeUI32(message, name, this.openCloseSettleFlag);
        impl.serializeUI32(message, name, this.securityIDSource);
        impl.serializeUI32(message, name, this.securityID);
        impl.serializeUI32(message, name, this.rptSeq);
        impl.serializeFloat64(message, name, this.mdEntryPx);
        impl.serializeUI32(message, name, this.mdEntryTime);
        impl.serializeUI32(message, name, this.mdEntrySize);
        impl.serializeUI32(message, name, this.numberOfOrders);
        impl.serializeFloat64(message, name, this.tradingSessionID);
        impl.serializeFloat64(message, name, this.netChgPrevDay);
        impl.serializeUI32(message, name, this.tradeVolume);
        impl.serializeFloat64(message, name, this.tradeCondition);
        impl.serializeFloat64(message, name, this.tickDirection);
        impl.serializeFloat64(message, name, this.quoteCondition);
        impl.serializeUI32(message, name, this.aggressorSide);
        impl.serializeFloat64(message, name, this.matchEventIndicator);
        impl.serializeFloat64(message, name, this.dummy1);
        impl.serializeI32(message, name, this.dummy2);
    }

    /*
     * This method deserializes a MarketDataEntry.
     *
     * @see org.fiware.kiara.serialization.impl.Serializable#deserialize(org.fiware.kiara.serialization.impl.SerializerImpl, org.fiware.kiara.serialization.impl.BinaryInputStream, java.lang.String)
     */
    @Override
    public void deserialize(SerializerImpl impl, BinaryInputStream message, String name) throws IOException {
        this.mdUpdateAction = impl.deserializeUI32(message, name);
        this.mdPriceLevel = impl.deserializeUI32(message, name);
        this.mdEntryType = impl.deserializeFloat64(message, name);
        this.openCloseSettleFlag = impl.deserializeUI32(message, name);
        this.securityIDSource = impl.deserializeUI32(message, name);
        this.securityID = impl.deserializeUI32(message, name);
        this.rptSeq = impl.deserializeUI32(message, name);
        this.mdEntryPx = impl.deserializeFloat64(message, name);
        this.mdEntryTime = impl.deserializeUI32(message, name);
        this.mdEntrySize = impl.deserializeUI32(message, name);
        this.numberOfOrders = impl.deserializeUI32(message, name);
        this.tradingSessionID = impl.deserializeFloat64(message, name);
        this.netChgPrevDay = impl.deserializeFloat64(message, name);
        this.tradeVolume = impl.deserializeUI32(message, name);
        this.tradeCondition = impl.deserializeFloat64(message, name);
        this.tickDirection = impl.deserializeFloat64(message, name);
        this.quoteCondition = impl.deserializeFloat64(message, name);
        this.aggressorSide = impl.deserializeUI32(message, name);
        this.matchEventIndicator = impl.deserializeFloat64(message, name);
        this.dummy1 = impl.deserializeFloat64(message, name);
        this.dummy2 = impl.deserializeI32(message, name);
    }

    /*
     * @param other An object instance of Object
     */
    @Override
    public boolean equals(Object other) {
        boolean comparison = true;

        if (other instanceof MarketDataEntry) {

            comparison = comparison && (this.mdUpdateAction == ((MarketDataEntry) other).mdUpdateAction);

            comparison = comparison && (this.mdPriceLevel == ((MarketDataEntry) other).mdPriceLevel);

            comparison = comparison && (this.mdEntryType == ((MarketDataEntry) other).mdEntryType);

            comparison = comparison && (this.openCloseSettleFlag == ((MarketDataEntry) other).openCloseSettleFlag);

            comparison = comparison && (this.securityIDSource == ((MarketDataEntry) other).securityIDSource);

            comparison = comparison && (this.securityID == ((MarketDataEntry) other).securityID);

            comparison = comparison && (this.rptSeq == ((MarketDataEntry) other).rptSeq);

            comparison = comparison && (this.mdEntryPx == ((MarketDataEntry) other).mdEntryPx);

            comparison = comparison && (this.mdEntryTime == ((MarketDataEntry) other).mdEntryTime);

            comparison = comparison && (this.mdEntrySize == ((MarketDataEntry) other).mdEntrySize);

            comparison = comparison && (this.numberOfOrders == ((MarketDataEntry) other).numberOfOrders);

            comparison = comparison && (this.tradingSessionID == ((MarketDataEntry) other).tradingSessionID);

            comparison = comparison && (this.netChgPrevDay == ((MarketDataEntry) other).netChgPrevDay);

            comparison = comparison && (this.tradeVolume == ((MarketDataEntry) other).tradeVolume);

            comparison = comparison && (this.tradeCondition == ((MarketDataEntry) other).tradeCondition);

            comparison = comparison && (this.tickDirection == ((MarketDataEntry) other).tickDirection);

            comparison = comparison && (this.quoteCondition == ((MarketDataEntry) other).quoteCondition);

            comparison = comparison && (this.aggressorSide == ((MarketDataEntry) other).aggressorSide);

            comparison = comparison && (this.matchEventIndicator == ((MarketDataEntry) other).matchEventIndicator);

            comparison = comparison && (this.dummy1 == ((MarketDataEntry) other).dummy1);

            comparison = comparison && (this.dummy2 == ((MarketDataEntry) other).dummy2);

        }

        return comparison;
    }

    /*
     * Method to get the attribute mdUpdateAction.
     */
    public int getMdUpdateAction() {
        return this.mdUpdateAction;
    }

    /*
     * Method to set the attribute mdUpdateAction.
     */
    public void setMdUpdateAction(int mdUpdateAction) {
        this.mdUpdateAction = mdUpdateAction;
    }

    /*
     * Method to get the attribute mdPriceLevel.
     */
    public int getMdPriceLevel() {
        return this.mdPriceLevel;
    }

    /*
     * Method to set the attribute mdPriceLevel.
     */
    public void setMdPriceLevel(int mdPriceLevel) {
        this.mdPriceLevel = mdPriceLevel;
    }

    /*
     * Method to get the attribute mdEntryType.
     */
    public double getMdEntryType() {
        return this.mdEntryType;
    }

    /*
     * Method to set the attribute mdEntryType.
     */
    public void setMdEntryType(double mdEntryType) {
        this.mdEntryType = mdEntryType;
    }

    /*
     * Method to get the attribute openCloseSettleFlag.
     */
    public int getOpenCloseSettleFlag() {
        return this.openCloseSettleFlag;
    }

    /*
     * Method to set the attribute openCloseSettleFlag.
     */
    public void setOpenCloseSettleFlag(int openCloseSettleFlag) {
        this.openCloseSettleFlag = openCloseSettleFlag;
    }

    /*
     * Method to get the attribute securityIDSource.
     */
    public int getSecurityIDSource() {
        return this.securityIDSource;
    }

    /*
     * Method to set the attribute securityIDSource.
     */
    public void setSecurityIDSource(int securityIDSource) {
        this.securityIDSource = securityIDSource;
    }

    /*
     * Method to get the attribute securityID.
     */
    public int getSecurityID() {
        return this.securityID;
    }

    /*
     * Method to set the attribute securityID.
     */
    public void setSecurityID(int securityID) {
        this.securityID = securityID;
    }

    /*
     * Method to get the attribute rptSeq.
     */
    public int getRptSeq() {
        return this.rptSeq;
    }

    /*
     * Method to set the attribute rptSeq.
     */
    public void setRptSeq(int rptSeq) {
        this.rptSeq = rptSeq;
    }

    /*
     * Method to get the attribute mdEntryPx.
     */
    public double getMdEntryPx() {
        return this.mdEntryPx;
    }

    /*
     * Method to set the attribute mdEntryPx.
     */
    public void setMdEntryPx(double mdEntryPx) {
        this.mdEntryPx = mdEntryPx;
    }

    /*
     * Method to get the attribute mdEntryTime.
     */
    public int getMdEntryTime() {
        return this.mdEntryTime;
    }

    /*
     * Method to set the attribute mdEntryTime.
     */
    public void setMdEntryTime(int mdEntryTime) {
        this.mdEntryTime = mdEntryTime;
    }

    /*
     * Method to get the attribute mdEntrySize.
     */
    public int getMdEntrySize() {
        return this.mdEntrySize;
    }

    /*
     * Method to set the attribute mdEntrySize.
     */
    public void setMdEntrySize(int mdEntrySize) {
        this.mdEntrySize = mdEntrySize;
    }

    /*
     * Method to get the attribute numberOfOrders.
     */
    public int getNumberOfOrders() {
        return this.numberOfOrders;
    }

    /*
     * Method to set the attribute numberOfOrders.
     */
    public void setNumberOfOrders(int numberOfOrders) {
        this.numberOfOrders = numberOfOrders;
    }

    /*
     * Method to get the attribute tradingSessionID.
     */
    public double getTradingSessionID() {
        return this.tradingSessionID;
    }

    /*
     * Method to set the attribute tradingSessionID.
     */
    public void setTradingSessionID(double tradingSessionID) {
        this.tradingSessionID = tradingSessionID;
    }

    /*
     * Method to get the attribute netChgPrevDay.
     */
    public double getNetChgPrevDay() {
        return this.netChgPrevDay;
    }

    /*
     * Method to set the attribute netChgPrevDay.
     */
    public void setNetChgPrevDay(double netChgPrevDay) {
        this.netChgPrevDay = netChgPrevDay;
    }

    /*
     * Method to get the attribute tradeVolume.
     */
    public int getTradeVolume() {
        return this.tradeVolume;
    }

    /*
     * Method to set the attribute tradeVolume.
     */
    public void setTradeVolume(int tradeVolume) {
        this.tradeVolume = tradeVolume;
    }

    /*
     * Method to get the attribute tradeCondition.
     */
    public double getTradeCondition() {
        return this.tradeCondition;
    }

    /*
     * Method to set the attribute tradeCondition.
     */
    public void setTradeCondition(double tradeCondition) {
        this.tradeCondition = tradeCondition;
    }

    /*
     * Method to get the attribute tickDirection.
     */
    public double getTickDirection() {
        return this.tickDirection;
    }

    /*
     * Method to set the attribute tickDirection.
     */
    public void setTickDirection(double tickDirection) {
        this.tickDirection = tickDirection;
    }

    /*
     * Method to get the attribute quoteCondition.
     */
    public double getQuoteCondition() {
        return this.quoteCondition;
    }

    /*
     * Method to set the attribute quoteCondition.
     */
    public void setQuoteCondition(double quoteCondition) {
        this.quoteCondition = quoteCondition;
    }

    /*
     * Method to get the attribute aggressorSide.
     */
    public int getAggressorSide() {
        return this.aggressorSide;
    }

    /*
     * Method to set the attribute aggressorSide.
     */
    public void setAggressorSide(int aggressorSide) {
        this.aggressorSide = aggressorSide;
    }

    /*
     * Method to get the attribute matchEventIndicator.
     */
    public double getMatchEventIndicator() {
        return this.matchEventIndicator;
    }

    /*
     * Method to set the attribute matchEventIndicator.
     */
    public void setMatchEventIndicator(double matchEventIndicator) {
        this.matchEventIndicator = matchEventIndicator;
    }

    /*
     * Method to get the attribute dummy1.
     */
    public double getDummy1() {
        return this.dummy1;
    }

    /*
     * Method to set the attribute dummy1.
     */
    public void setDummy1(double dummy1) {
        this.dummy1 = dummy1;
    }

    /*
     * Method to get the attribute dummy2.
     */
    public int getDummy2() {
        return this.dummy2;
    }

    /*
     * Method to set the attribute dummy2.
     */
    public void setDummy2(int dummy2) {
        this.dummy2 = dummy2;
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.mdUpdateAction, this.mdPriceLevel, this.mdEntryType, this.openCloseSettleFlag, this.securityIDSource, this.securityID, this.rptSeq, this.mdEntryPx, this.mdEntryTime, this.mdEntrySize, this.numberOfOrders, this.tradingSessionID, this.netChgPrevDay, this.tradeVolume, this.tradeCondition, this.tickDirection, this.quoteCondition, this.aggressorSide, this.matchEventIndicator, this.dummy1, this.dummy2);
    }
}
